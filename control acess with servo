#include <Servo.h>
#include <LiquidCrystal_I2C.h>
#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 10
#define RST_PIN 9
#define IR_PIN 4 

String UID = "63 B7 3D 14";
byte lock = 0;

Servo servo;
LiquidCrystal_I2C lcd(0x27, 16, 2);
MFRC522 rfid(SS_PIN, RST_PIN);

void setup() {
  Serial.begin(9600);
  servo.attach(3);
  servo.write(70); 
  lcd.init();
  lcd.backlight();
  SPI.begin();
  rfid.PCD_Init();

  pinMode(IR_PIN, INPUT); 
}

void loop() {
  if (digitalRead(IR_PIN) == LOW) { 
    servo.write(160); 
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("");
    lcd.setCursor(0, 1);
    lcd.print("Cancela aberta");
    delay(2000); 
    servo.write(70); 
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Cancela fechada");
    delay(1500);
    lcd.clear();
    return; 
  }

  // Mensagem padr√£o
  lcd.setCursor(4, 0);
  lcd.print("Bem-vindo!");
  lcd.setCursor(1, 1);
  lcd.print(" insira a tag");

  // Leitura de tag RFID
  if (!rfid.PICC_IsNewCardPresent()) return;
  if (!rfid.PICC_ReadCardSerial()) return;

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Scanneando");
  Serial.print("NUID tag is :");
  String ID = "";

  for (byte i = 0; i < rfid.uid.size; i++) {
    lcd.print(".");
    ID.concat(String(rfid.uid.uidByte[i] < 0x10 ? " 0" : " "));
    ID.concat(String(rfid.uid.uidByte[i], HEX));
    delay(300);
  }
  ID.toUpperCase();

  if (ID.substring(1) == UID && lock == 0) {
    servo.write(160); 
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print(" cancela aberta");
    delay(2000); 
    servo.write(70); 
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("cancela fechada");
    delay(1500);
    lcd.clear();
    lock = 0;
  } else if (ID.substring(1) == UID && lock == 1) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print(" ja aberta");
    delay(1500);
    lcd.clear();
  } else {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("tag invalida");
    delay(1500);
    lcd.clear();
  }
}
