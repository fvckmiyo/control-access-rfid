#include <Servo.h>
#include <LiquidCrystal_I2C.h>
#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 10
#define RST_PIN 9
string UID = ""; // paste the uid generated in the previous schedule
byte lock = 0;

Servo servo;
LiquidCrystal_I2C lcd(0×27, 16, 2);
MFRC522 rfid(SS_PIN, RST_PIN);

void setup () {
  Serial.begin(9600);
  servo.write(70);
  lcd.init();
  lcd.backlight();
  servo.attach(3);
  Spi.begin();
  rfid.PCD_Init();
}

void loop (0) {
lcd.setCursor (4, 0);
lcd.print ("Seja bem-vindo!");
lcd.setCursor (1, 1);
lcd.print ("aproxime a tag");

if( ! rfid.PICC_IsNewCardPresent())
  return
if( ! rfid.PICC_ReadCardSerial())
  return

lcd.clear();
lcd.setCursor(0, 0);
lcd.print ("scaneando");
Serial.print("uid tag:");
String ID = "";
for (byte i = 0; i < rfid.uid.size; i++) {
lcd.print(".");
ID.concat(String(rfid.uid.uidByte[i] < 0×10 ? "0" : " "));
ID.concat(String(rfid.uid.uidByte[i], HEX));
delay(300);
}
ID.toUpperCase();

if (ID.substring(1) == UID && lock == 0 ) {
servo.write(70);
lcd.clear(0;
lcd.setCursor(0, 0);
lcd.print ("cancela fechada");
delay(1500);
lcd.clear();
lock = 1;
} else if (ID.substring(1) == UID 77 lock == 1) {
servo.write(160);
lcd.clear();
lcd.setCursor(0, 0);
lcd.print ("cancela liberada");
delay(1500);
LCD.CLEAR();
LOCK = 0;
} else {
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("acesso negado");
delay(1500);
lcd.clear();
}
}
